---

name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    type: [ opened, synchronize, reopened, review_requested ]
    paths:
      - '**.gemfile'
      - '**.rb'
      - '.github/workflows/**'
      - '!bin/**'
  workflow_dispatch:

env:
  BUNDLE_GEMFILE: gemfiles/rails80_gems.rb
  DEBIAN_FRONTEND: noninteractive
  FERRUM_PROCESS_TIMEOUT: 40
  JAVA_OPTS: -Xmn2g -Xms6g -Xmx6g -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m -Xss1m
    -XX:+UseG1GC -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:ReservedCodeCacheSize=256m
    -XX:+UseCodeCacheFlushing
  JRUBY_OPTS: --dev -J-Djruby.thread.pool.enabled=true
  MALLOC_ARENA_MAX: 2
  RUBY_GC_HEAP_FREE_SLOTS: 600000
  RUBY_GC_HEAP_GROWTH_FACTOR: 1.1
  RUBY_YJIT_ENABLE: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Test that new contributors can run the tests directly after checkout.
  test-minimal-setup:
    name: Test with minimal setup
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-ruby-and-dependencies
        with:
          ruby-version: 3.4

      - run: bin/rake test
        env:
          SCREENSHOT_DRIVER: vips

  functional-test:
    name: Functional Test
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/setup-ruby-and-dependencies
        with:
          ruby-version: 3.4
          cache-apt-packages: true

      - run: bin/rake test
        env:
          COVERAGE: enabled
          DISABLE_SKIP_TESTS: 1
          SCREENSHOT_DRIVER: vips

      - uses: ./.github/actions/upload-screenshots
        if: failure()
        with:
          name: base-screenshots

      - name: Uploading Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          retention-days: 1
          path: coverage

  matrix:
    name: Test Ruby & Rails
    # Test on master, when a review is requested or manually invoked.
    if: >
      github.ref == 'refs/heads/master' ||
      github.event_name == 'workflow_dispatch' ||
      github.event.pull_request.requested_reviewers.length > 0
    needs: [ functional-test ]
    runs-on: ubuntu-latest
    timeout-minutes: ${{ contains(matrix.ruby-version, 'jruby') && 20 || 8 }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        ruby-version: [ 3.4, 3.3, 3.2, jruby-9.4, jruby-10.0 ]
        gemfile:
          - rails70_gems.rb
          - rails71_gems.rb
          - rails72_gems.rb
          - rails80_gems.rb
        experimental: [ false ]
        exclude:
          # We already tested last version
          - ruby-version: 3.4
            gemfile: rails80_gems.rb
            experimental: false
          # JRuby 9.x is Ruby 3.1 compatible, and Rails 8 requires Ruby 3.2.
          - ruby-version: jruby-9.4
            gemfile: rails80_gems.rb
            experimental: false
        include:
          - ruby-version: 3.5.0-preview1
            gemfile: edge_gems
            experimental: true
          - ruby-version: 3.4
            gemfile: edge_gems.rb
            experimental: true
          - ruby-version: jruby-head
            gemfile: rails80_gems.rb
            experimental: true

    env:
      BUNDLE_GEMFILE: gemfiles/${{ matrix.gemfile }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-ruby-and-dependencies
        with:
          ruby-version: ${{ matrix.ruby-version }}
          ruby-cache-version: ${{ matrix.ruby-version }}-${{ matrix.gemfile }}-1
          cache-apt-packages: true

      - name: Run tests (with 2 retries)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: ${{ contains(matrix.ruby-version, 'jruby') && 7 || 3 }}
          max_attempts: 3
          command: bin/rake test

  matrix-screenshot-driver:
    name: Test Drivers
    if: >
      github.ref == 'refs/heads/master' ||
      github.event.inputs ||
      github.event_name == 'workflow_dispatch' ||
      github.event.pull_request.requested_reviewers.length > 0
    needs: [ 'functional-test' ]

    strategy:
      matrix:
        capybara-driver: [ selenium_headless, selenium_chrome_headless, cuprite ]
        screenshot-driver: [ vips, chunky_png ]

    runs-on: ubuntu-latest

    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/setup-ruby-and-dependencies
        with:
          ruby-version: 3.4
          cache-apt-packages: ${{ matrix.screenshot-driver == 'vips' }}

      - name: Cache Selenium
        uses: actions/cache@v4
        with:
          path: ~/.cache/selenium
          key: ${{ runner.os }}-selenium-${{ matrix.capybara-driver }}

      - run: bin/rake test:integration
        env:
          CAPYBARA_DRIVER: ${{ matrix.capybara-driver }}
          SCREENSHOT_DRIVER: ${{ matrix.screenshot-driver }}

      - uses: ./.github/actions/upload-screenshots
        if: always()
        with:
          name: screenshots-${{ matrix.capybara-driver }}-${{ matrix.screenshot-driver }}
